#pragma checksum "C:\borrar5\core-mvc\Views\Home\Privacy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d36b474d1f762a71c043fef14edfbf918e6a6d17"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Privacy), @"mvc.1.0.view", @"/Views/Home/Privacy.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Privacy.cshtml", typeof(AspNetCore.Views_Home_Privacy))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\borrar5\core-mvc\Views\_ViewImports.cshtml"
using core_mvc;

#line default
#line hidden
#line 2 "C:\borrar5\core-mvc\Views\_ViewImports.cshtml"
using core_mvc.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d36b474d1f762a71c043fef14edfbf918e6a6d17", @"/Views/Home/Privacy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9a9b8feb2cf639981d498ae7aac9b29b1bd3377b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Privacy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\borrar5\core-mvc\Views\Home\Privacy.cshtml"
  
    ViewData["Title"] = "Privacy Policy";

#line default
#line hidden
            BeginContext(50, 4, true);
            WriteLiteral("<h1>");
            EndContext();
            BeginContext(55, 17, false);
#line 4 "C:\borrar5\core-mvc\Views\Home\Privacy.cshtml"
Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(72, 11, true);
            WriteLiteral("</h1>\r\n\r\n\r\n");
            EndContext();
            BeginContext(83, 8168, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d36b474d1f762a71c043fef14edfbf918e6a6d173659", async() => {
                BeginContext(89, 7527, true);
                WriteLiteral(@"

    <link rel=""stylesheet"" href=""https://code.getmdl.io/1.1.3/material.orange-indigo.min.css"">
    <link rel=""stylesheet"" href=""https://fonts.googleapis.com/icon?family=Material+Icons"">
    <script defer src=""https://code.getmdl.io/1.1.3/material.min.js""></script>


    <script type=""text/javascript"">

        /**
         * Handles the sign in button press.
         */
        function toggleSignIn() {
            if (firebase.auth().currentUser) {
                // [START signout]
                firebase.auth().signOut();
                // [END signout]
            } else {
                var email = document.getElementById('email').value;
                var password = document.getElementById('password').value;
                if (email.length < 4) {
                    alert('Please enter an email address.');
                    return;
                }
                if (password.length < 4) {
                    alert('Please enter a password.');
                    ret");
                WriteLiteral(@"urn;
                }
                // Sign in with email and pass.
                // [START authwithemail]
                firebase.auth().signInWithEmailAndPassword(email, password).catch(function (error) {
                    // Handle Errors here.
                    var errorCode = error.code;
                    var errorMessage = error.message;
                    // [START_EXCLUDE]
                    if (errorCode === 'auth/wrong-password') {
                        alert('Wrong password.');
                    } else {
                        alert(errorMessage);
                    }
                    console.log(error);
                    document.getElementById('quickstart-sign-in').disabled = false;
                    // [END_EXCLUDE]
                });
                // [END authwithemail]
            }
            document.getElementById('quickstart-sign-in').disabled = true;
        }

        /**
         * Handles the sign up button press.
         */
   ");
                WriteLiteral(@"     function handleSignUp() {
            var email = document.getElementById('email').value;
            var password = document.getElementById('password').value;
            if (email.length < 4) {
                alert('Please enter an email address.');
                return;
            }
            if (password.length < 4) {
                alert('Please enter a password.');
                return;
            }
            // Sign in with email and pass.
            // [START createwithemail]
            firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (error) {
                // Handle Errors here.
                var errorCode = error.code;
                var errorMessage = error.message;
                // [START_EXCLUDE]
                if (errorCode == 'auth/weak-password') {
                    alert('The password is too weak.');
                } else {
                    alert(errorMessage);
                }
                console.log(");
                WriteLiteral(@"error);
                // [END_EXCLUDE]
            });
            // [END createwithemail]
        }

        /**
         * Sends an email verification to the user.
         */
        function sendEmailVerification() {
            // [START sendemailverification]
            firebase.auth().currentUser.sendEmailVerification().then(function () {
                // Email Verification sent!
                // [START_EXCLUDE]
                alert('Email Verification Sent!');
                // [END_EXCLUDE]
            });
            // [END sendemailverification]
        }

        function sendPasswordReset() {
            var email = document.getElementById('email').value;
            // [START sendpasswordemail]
            firebase.auth().sendPasswordResetEmail(email).then(function () {
                // Password Reset Email Sent!
                // [START_EXCLUDE]
                alert('Password Reset Email Sent!');
                // [END_EXCLUDE]
            }).catch(fu");
                WriteLiteral(@"nction (error) {
                // Handle Errors here.
                var errorCode = error.code;
                var errorMessage = error.message;
                // [START_EXCLUDE]
                if (errorCode == 'auth/invalid-email') {
                    alert(errorMessage);
                } else if (errorCode == 'auth/user-not-found') {
                    alert(errorMessage);
                }
                console.log(error);
                // [END_EXCLUDE]
            });
            // [END sendpasswordemail];
        }

        /**
         * initApp handles setting up UI event listeners and registering Firebase auth listeners:
         *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or
         *    out, and that is where we update the UI.
         */
        function initApp() {
            // Listening for auth state changes.
            // [START authstatelistener]
            firebase.auth().onAuthStateChanged(function (");
                WriteLiteral(@"user) {
                // [START_EXCLUDE silent]
                document.getElementById('quickstart-verify-email').disabled = true;
                // [END_EXCLUDE]
                if (user) {
                    // User is signed in.
                    var displayName = user.displayName;
                    var email = user.email;
                    var emailVerified = user.emailVerified;
                    var photoURL = user.photoURL;
                    var isAnonymous = user.isAnonymous;
                    var uid = user.uid;
                    var providerData = user.providerData;
                    // [START_EXCLUDE]
                    document.getElementById('quickstart-sign-in-status').textContent = 'Signed in';
                    document.getElementById('quickstart-sign-in').textContent = 'Sign out';
                    document.getElementById('quickstart-account-details').textContent = JSON.stringify(user, null, '  ');
                    if (!emailVerified) {
          ");
                WriteLiteral(@"              document.getElementById('quickstart-verify-email').disabled = false;
                    }
                    // [END_EXCLUDE]
                } else {
                    // User is signed out.
                    // [START_EXCLUDE]
                    document.getElementById('quickstart-sign-in-status').textContent = 'Signed out';
                    document.getElementById('quickstart-sign-in').textContent = 'Sign in';
                    document.getElementById('quickstart-account-details').textContent = 'null';
                    // [END_EXCLUDE]
                }
                // [START_EXCLUDE silent]
                document.getElementById('quickstart-sign-in').disabled = false;
                // [END_EXCLUDE]
            });
            // [END authstatelistener]

            document.getElementById('quickstart-sign-in').addEventListener('click', toggleSignIn, false);
            document.getElementById('quickstart-sign-up').addEventListener('click', handleSignUp,");
                WriteLiteral(@" false);
            document.getElementById('quickstart-verify-email').addEventListener('click', sendEmailVerification, false);
            document.getElementById('quickstart-password-reset').addEventListener('click', sendPasswordReset, false);
        }

        window.onload = function () {
            initApp();
        };
    </script>



");
                EndContext();
                BeginContext(7647, 557, true);
                WriteLiteral(@"

    <script src=""https://www.gstatic.com/firebasejs/5.9.2/firebase.js""></script>
    <script>
        // Initialize Firebase
        var config = {
            apiKey: ""AIzaSyDrkSEs5jOx91krsGizo4p2xAsmgPrHzSc"",
            authDomain: ""prueba1-365d2.firebaseapp.com"",
            databaseURL: ""https://prueba1-365d2.firebaseio.com"",
            projectId: ""prueba1-365d2"",
            storageBucket: ""prueba1-365d2.appspot.com"",
            messagingSenderId: ""256425404574""
        };
        firebase.initializeApp(config);
    </script>
");
                EndContext();
                BeginContext(8240, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8251, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
            BeginContext(8257, 3117, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d36b474d1f762a71c043fef14edfbf918e6a6d1713447", async() => {
                BeginContext(8263, 3104, true);
                WriteLiteral(@"
    <div class=""demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-header"">

        <!-- Header section containing title -->
        <header class=""mdl-layout__header mdl-color-text--white mdl-color--light-blue-700"">
            <div class=""mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid"">
                <div class=""mdl-layout__header-row mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--8-col-desktop"">
                    <a href=""/""><h3>Firebase Authentication</h3></a>
                </div>
            </div>
        </header>

        <main class=""mdl-layout__content mdl-color--grey-100"">
            <div class=""mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid"">

                <!-- Container for the demo -->
                <div class=""mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop"">
                    <div class=""mdl-card__title mdl-color--light-blue-600 mdl-color-text--white"">
                ");
                WriteLiteral(@"        <h2 class=""mdl-card__title-text"">Firebase Email &amp; Password Authentication</h2>
                    </div>
                    <div class=""mdl-card__supporting-text mdl-color-text--grey-600"">
                        <p>Enter an email and password below and either sign in to an existing account or sign up</p>

                        <input class=""mdl-textfield__input"" style=""display:inline;width:auto;"" type=""text"" id=""email"" name=""email"" placeholder=""Email"" />
                        &nbsp;&nbsp;&nbsp;
                        <input class=""mdl-textfield__input"" style=""display:inline;width:auto;"" type=""password"" id=""password"" name=""password"" placeholder=""Password"" />
                        <br /><br />
                        <button disabled class=""mdl-button mdl-js-button mdl-button--raised"" id=""quickstart-sign-in"" name=""signin"">Sign In</button>
                        &nbsp;&nbsp;&nbsp;
                        <button class=""mdl-button mdl-js-button mdl-button--raised"" id=""quickstart-");
                WriteLiteral(@"sign-up"" name=""signup"">Sign Up</button>
                        &nbsp;&nbsp;&nbsp;
                        <button class=""mdl-button mdl-js-button mdl-button--raised"" disabled id=""quickstart-verify-email"" name=""verify-email"">Send Email Verification</button>
                        &nbsp;&nbsp;&nbsp;
                        <button class=""mdl-button mdl-js-button mdl-button--raised"" id=""quickstart-password-reset"" name=""verify-email"">Send Password Reset Email</button>

                        <!-- Container where we'll display the user details -->
                        <div class=""quickstart-user-details-container"">
                            Firebase sign-in status: <span id=""quickstart-sign-in-status"">Unknown</span>
                            <div>Firebase auth <code>currentUser</code> object value:</div>
                            <pre><code id=""quickstart-account-details"">null</code></pre>
                        </div>
                    </div>
                </div>

            </div");
                WriteLiteral(">\r\n        </main>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(11374, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
